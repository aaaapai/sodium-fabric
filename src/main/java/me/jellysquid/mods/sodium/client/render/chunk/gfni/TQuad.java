package me.jellysquid.mods.sodium.client.render.chunk.gfni;

import java.util.Arrays;

import org.joml.Vector3f;
import org.joml.Vector3fc;

import me.jellysquid.mods.sodium.client.model.quad.properties.ModelQuadFacing;

/**
 * Represents a quad for the purposes of translucency sorting. Called TQuad to
 * avoid confusion with other quad classes.
 * 
 * @implNote Autogenerated hashcode and equals methods to ensure the arrays are
 *           correctly compared..
 */
record TQuad(ModelQuadFacing facing, Vector3fc normal, Vector3f center, float[] extents) {
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((facing == null) ? 0 : facing.hashCode());
		result = prime * result + ((normal == null) ? 0 : normal.hashCode());
		result = prime * result + ((center == null) ? 0 : center.hashCode());
		result = prime * result + Arrays.hashCode(extents);
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TQuad other = (TQuad) obj;
		if (facing != other.facing)
			return false;
		if (normal == null) {
			if (other.normal != null)
				return false;
		} else if (!normal.equals(other.normal))
			return false;
		if (center == null) {
			if (other.center != null)
				return false;
		} else if (!center.equals(other.center))
			return false;
		if (!Arrays.equals(extents, other.extents))
			return false;
		return true;
	}
}
